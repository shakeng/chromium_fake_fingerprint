# Copyright 2020 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/features.gni")
import("//chrome/common/features.gni")
import("//chromecast/chromecast.gni")
import("strings/accessibility_strings.gni")

assert(is_chromeos)

accessibility_out_dir = "$root_out_dir/resources/chromeos/accessibility/"

group("build") {
  deps = [
    ":accessibility_strings",
    ":chromevox_guest_manifest",
    ":chromevox_manifest",
    ":select_to_speak_guest_manifest",
    ":select_to_speak_manifest",
    "autoclick:build",
    "chromevox:build",
    "select_to_speak:build",
    "switch_access:build",
  ]
}

template("manifest") {
  version_file = "//chrome/VERSION"
  version_script = "//build/util/version.py"
  template_file = invoker.input_file
  output_file = invoker.output_file
  key = invoker.key
  action(target_name) {
    script = "//chrome/browser/resources/chromeos/accessibility/chromevox/tools/generate_manifest.py"
    inputs = [
      version_file,
      version_script,
    ]
    sources = [ template_file ]
    outputs = [ output_file ]
    args = [
      "--key=$key",
      "--version_file=" + rebase_path(version_file, root_build_dir),
      "--output_manifest=" + rebase_path(output_file, root_build_dir),
    ]
    if (defined(invoker.is_guest_manifest) && invoker.is_guest_manifest) {
      args += [ "--is_guest_manifest=1" ]
    }
    args += rebase_path(sources, root_build_dir)
  }
}

manifest("chromevox_manifest") {
  input_file = "chromevox_manifest.json.jinja2"
  output_file = "$accessibility_out_dir/chromevox_manifest.json"
  key = "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDltVl1k15pjRzuZfMc3B69inxwm2bZeZ2O8/zFO+NluHnBm3GJ3fzdOoFGJd+M16I8p7zxxQyHeDMfWYASyCeB8XnUEDKjqNLQfCnncsANzHsYoEbYj2nEUML2P13b9q+AAvpCBpAJ4cZp81e9n1y/vbSXHE4385cgkKueItzikQIDAQAB"
}

manifest("chromevox_guest_manifest") {
  input_file = "chromevox_manifest.json.jinja2"
  output_file = "$accessibility_out_dir/chromevox_manifest_guest.json"
  key = "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDltVl1k15pjRzuZfMc3B69inxwm2bZeZ2O8/zFO+NluHnBm3GJ3fzdOoFGJd+M16I8p7zxxQyHeDMfWYASyCeB8XnUEDKjqNLQfCnncsANzHsYoEbYj2nEUML2P13b9q+AAvpCBpAJ4cZp81e9n1y/vbSXHE4385cgkKueItzikQIDAQAB"
  is_guest_manifest = true
}

manifest("select_to_speak_manifest") {
  input_file = "select_to_speak_manifest.json.jinja2"
  output_file = "$accessibility_out_dir/select_to_speak_manifest.json"
  key = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAukZ6JJWr0jHmFTkn0pcigpjI+cP0FqTo8FRIcCwy2fPeM+Ymf+7C9MK642i+Nhdr2qSsRF26AMIKbBdSDUnh04bfg5J/rKa/VO88LvXENYQMGhTo1y9mVg2OsbQJtEL9aTLU2G0SoKcr3g/+lggBKR5ydW1Qa0WGGAM9XrLm8iu/wn2uF4mfcMii6KfyEsAwWalpr/Td5WbtIoNNDpNeKO4ZSZJis1n9PZXqaOKpW7PqFDpEHw2PnPATxkcqj/wIx+Shgada0fhrzMlhXLhhj7ThSSWbuTz5n5NebuQ49/Z2ATgpBCSzYBVXEXMDe6LBBtGiZ/QR9UkA8Lz8bP6xIQIDAQAB"
}

manifest("select_to_speak_guest_manifest") {
  input_file = "select_to_speak_manifest.json.jinja2"
  output_file = "$accessibility_out_dir/select_to_speak_manifest_guest.json"
  key = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAukZ6JJWr0jHmFTkn0pcigpjI+cP0FqTo8FRIcCwy2fPeM+Ymf+7C9MK642i+Nhdr2qSsRF26AMIKbBdSDUnh04bfg5J/rKa/VO88LvXENYQMGhTo1y9mVg2OsbQJtEL9aTLU2G0SoKcr3g/+lggBKR5ydW1Qa0WGGAM9XrLm8iu/wn2uF4mfcMii6KfyEsAwWalpr/Td5WbtIoNNDpNeKO4ZSZJis1n9PZXqaOKpW7PqFDpEHw2PnPATxkcqj/wIx+Shgada0fhrzMlhXLhhj7ThSSWbuTz5n5NebuQ49/Z2ATgpBCSzYBVXEXMDe6LBBtGiZ/QR9UkA8Lz8bP6xIQIDAQAB"
  is_guest_manifest = true
}

accessibility_strings("accessibility_strings") {
  out_dir = accessibility_out_dir
}
